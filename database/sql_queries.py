CREATE_USER_TABLE_QUERY = """
CREATE TABLE IF NOT EXISTS telegram_users (
ID INTEGER PRIMARY KEY,
TELEGRAM_ID INTEGER,
USERNAME CHAR(50),
FIRST_NAME CHAR(50),
LAST_NAME CHAR(50),
REFERRENCE_LINK TEXT,
BALANCE INTEGER,
UNIQUE (TELEGRAM_ID)
)"""


ALTER_USER_TABLE_QUERY = """
ALTER TABLE telegram_users ADD COLUMN REFERRENCE_LINK TEXT
"""

ALTER_USER_TABLE_QUERY_V2 = """
ALTER TABLE telegram_users ADD COLUMN BALANCE INTEGER
"""


INSERT_USER_QUERY = """
INSERT INTO telegram_users VALUES (?, ?, ?, ?, ?, ?, ?)
"""

CREATE_BAN_USER_TABLE_QUERY = """
CREATE TABLE IF NOT EXISTS ban_users (
ID INTEGER PRIMARY KEY,
TELEGRAM_ID INTEGER,
BAN_COUNT INTEGER,
UNIQUE (TELEGRAM_ID)
)"""


INSERT_BAN_USER_QUERY = """
INSERT INTO ban_users VALUES (?, ?, ?)
"""

SELECT_BAN_USER_QUERY = """
SELECT * FROM ban_users WHERE TELEGRAM_ID = ?
"""

UPDATE_BAN_USER_TABLE_QUERY = """
UPDATE ban_users SET BAN_COUNT = BAN_COUNT + 1 WHERE TELEGRAM_ID = ?
"""


CREATE_PROFILE_TABLE_QUERY = """
CREATE TABLE IF NOT EXISTS profile (
ID INTEGER PRIMARY KEY,
TELEGRAM_ID INTEGER,
NICKNAME CHAR(50),
BIO TEXT,
AGE INTEGER,
GENDER CHAR(50),
HOBBY CHAR(50),
ZODIAC_SIGN CHAR(50),
PHOTO TEXT,
UNIQUE (TELEGRAM_ID)
)"""

INSERT_PROFILE_USER_QUERY = """
INSERT INTO profile VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
"""

SELECT_TG_ID_USER_QUERY = """
SELECT TELEGRAM_ID FROM profile WHERE TELEGRAM_ID = ?"""


SELECT_PROFILE_QUERY = """
SELECT * FROM profile WHERE TELEGRAM_ID = ?
"""

SELECT_ALL_PROFILES_QUERY = """
SELECT * FROM profile"""

CREATE_LIKE_TABLE_QUERY = """
CREATE TABLE IF NOT EXISTS like_sys(
ID INTEGER PRIMARY KEY,
OWNER_TELEGRAM_ID INTEGER,
LIKER_TELEGRAM_ID INTEGER,
UNIQUE (OWNER_TELEGRAM_ID, LIKER_TELEGRAM_ID)
)"""

INSERT_LIKE_QUERY = """
INSERT INTO like_sys VALUES (?, ?, ?)
"""

CREATE_DISLIKE_TABLE_QUERY = """
CREATE TABLE IF NOT EXISTS dislike_sys(
ID INTEGER PRIMARY KEY,
OWNER_TELEGRAM_ID INTEGER,
DISLIKER_TELEGRAM_ID INTEGER,
UNIQUE (OWNER_TELEGRAM_ID, DISLIKER_TELEGRAM_ID)
)"""

INSERT_DISLIKE_QUERY = """
INSERT INTO dislike_sys VALUES (?, ?, ?)
"""

FILTER_LIKER_LEFT_JOIN_PROFILE_QUERY = """
SELECT * FROM profile
LEFT JOIN like_sys ON profile.TELEGRAM_ID = like_sys.OWNER_TELEGRAM_ID 
AND like_sys.LIKER_TELEGRAM_ID = ?
LEFT JOIN dislike_sys ON profile.TELEGRAM_ID = dislike_sys.OWNER_TELEGRAM_ID 
AND dislike_sys.DISLIKER_TELEGRAM_ID = ?
WHERE (like_sys.ID IS NULL AND dislike_sys.ID IS NULL)
AND profile.TELEGRAM_ID != ?
"""

FILTER_LIKER_DISLIKER_LEFT_JOIN_PROFILE_QUERY = """
SELECT * FROM profile
LEFT JOIN dislike_sys ON profile.TELEGRAM_ID = dislike_sys.OWNER_TELEGRAM_ID 
AND dislike_sys.DISLIKER_TELEGRAM_ID = ?
WHERE dislike_sys.ID IS NULL
"""


SELECT_COMPLAINTS_QUERY = """
SELECT USERNAME FROM telegram_users WHERE USERNAME = ?"""


SELECT_TG_ID_USERNAME_QUERY = """
SELECT TELEGRAM_ID FROM telegram_users WHERE USERNAME = ?"""


DELETE_PROFILE_QUERY = """
DELETE FROM profile WHERE TELEGRAM_ID = ?
"""


CREATE_USER_COMPLAINTS_QUERY = """
CREATE TABLE IF NOT EXISTS user_complain (
ID INTEGER PRIMARY KEY,
TELEGRAM_ID COMPLAINED INTEGER,
TELEGRAM ID BAD_USER INTEGER,
REASON CHAR(50),
BAD_COUNT INTEGER,
UNIQUE (TELEGRAM_ID)
)"""

UPDATE_USER_COMPLAINTS_QUERY = """
UPDATE user_complain SET BAD_COUNT = BAD_COUNT + 1 WHERE TELEGRAM_ID = ?
"""

SELECT_ALL_COMPLAINTS_USER_QUERY = """
SELECT * FROM user_complain WHERE TELEGRAM_ID = ?
"""

INSERT_BAD_USER_QUERY = """
INSERT INTO user_complain VALUES (?, ?, ?, ?, ?)
"""

CREATE_REFERRAL_USERS = """
CREATE TABLE IF NOT EXISTS referrals(
ID INTEGER PRIMARY KEY,
OWNER_TELEGRAM_ID INTEGER,
REFERRAL_TELEGRAM_ID INTEGER,
UNIQUE(OWNER_TELEGRAM_ID, REFERRAL_TELEGRAM_ID)
)"""


SELECT_REFERRAL_USER_QUERY = """
SELECT COALESCE(telegram_users.BALANCE, 0) as BALANCE,
COUNT(referrals.ID) as total_referrals
FROM telegram_users
LEFT JOIN referrals ON telegram_users.TELEGRAM_ID = referrals.OWNER_TELEGRAM_ID 
WHERE telegram_users.TELEGRAM_ID = ?
"""

SELECT_USER_QUERY = """
SELECT * FROM telegram_users WHERE TELEGRAM_ID = ?
"""

SELECT_USER_BY_LINK_QUERY = """
SELECT * FROM telegram_users WHERE REFERRENCE_LINK = ?
"""

UPDATE_USER_LINK_TABLE_QUERY = """
UPDATE telegram_users SET REFERRENCE_LINK = ? WHERE TELEGRAM_ID = ?
"""

INSERT_REFERRAL_QUERY = """
INSERT INTO referrals VALUES (?, ?, ?)
"""

UPDATE_USER_BALANCE_QUERY = """
UPDATE telegram_users SET BALANCE = COALESCE(BALANCE, 0) + 100 WHERE TELEGRAM_ID = ?
"""

SELECT_REFERRALS_BUTTON_QUERY = """
SELECT REFERRAL_TELEGRAM_ID FROM referrals WHERE OWNER_TELEGRAM_ID = ?
"""

CREATE_ANIME_TABLE_QUERY = """
CREATE TABLE IF NOT EXISTS anime_links (
ID INTEGER PRIMARY KEY,
ANIME_LINK TEXT,
UNIQUE(ANIME_LINK)
)"""

INSERT_ANIME_QUERY = """
INSERT OR IGNORE INTO anime_links VALUES (?, ?)
"""